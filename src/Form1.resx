<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>